versions pytest-6.2.2, py-1.10.0, python-3.9.0.final.0
cwd=C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter
args=('--debug',)

  pytest_cmdline_main [hook]
      config: <_pytest.config.Config object at 0x000001BD264F0AC0>
    pytest_plugin_registered [hook]
        plugin: <Session DevOps-Course-Starter exitstatus='<UNSET>' testsfailed=0 testscollected=0>
        manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
    finish pytest_plugin_registered --> [] [hook]
    pytest_configure [hook]
        config: <_pytest.config.Config object at 0x000001BD264F0AC0>
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x000001BD26AB0B20>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x000001BD26AB0910>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: faulthandler [assertion]
      pytest_configure [hook]
          config: <_pytest.config.Config object at 0x000001BD264F0AC0>
      finish pytest_configure --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.faulthandler.FaultHandlerHooks object at 0x000001BD26AB0C70>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: pdb [assertion]
    early skip of rewriting module: cmd [assertion]
    early skip of rewriting module: code [assertion]
    early skip of rewriting module: codeop [assertion]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x000001BD264F0AC0>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\mark\\__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\main.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\runner.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\fixtures.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\helpconfig.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\python.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\terminal.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\debugging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\unittest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\capture.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\skipping.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\tmpdir.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\monkeypatch.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\recwarn.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\pastebin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.nose' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\nose.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\assertion\\__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\junitxml.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\doctest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\cacheprovider.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\freeze_support.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\setuponly.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\setupplan.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\stepwise.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\warnings.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\logging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\reports.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\unraisableexception.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\threadexception.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\faulthandler.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=8 _state='suspended' tmpfile=<_io.TextIOWrapper name='<tempfile._TemporaryFileWrapper object at 0x000001BD26AC2B80>' mode='r+' encoding='utf-8'>> err=<FDCapture 2 oldfd=10 _state='suspended' tmpfile=<_io.TextIOWrapper name='<tempfile._TemporaryFileWrapper object at 0x000001BD26AC2BE0>' mode='r+' encoding='utf-8'>> in_=<FDCapture 0 oldfd=6 _state='started' tmpfile=<_io.TextIOWrapper name='nul' mode='r' encoding='cp1252'>> _state='suspended' _in_suspended=False> _capture_fixture=None>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session DevOps-Course-Starter exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x000001BD26AB0B20>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x000001BD26AB0910>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.faulthandler.FaultHandlerHooks object at 0x000001BD26AB0C70>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x000001BD26A82D60>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x000001BD26B27130>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
    finish pytest_configure --> [] [hook]
    pytest_sessionstart [hook]
        session: <Session DevOps-Course-Starter exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x000001BD264F0AC0>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\mark\\__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\main.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\runner.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\fixtures.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\helpconfig.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\python.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\terminal.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\debugging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\unittest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\capture.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\skipping.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\tmpdir.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\monkeypatch.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\recwarn.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\pastebin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.nose' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\nose.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\assertion\\__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\junitxml.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\doctest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\cacheprovider.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\freeze_support.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\setuponly.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\setupplan.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\stepwise.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\warnings.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\logging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\reports.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\unraisableexception.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\threadexception.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\faulthandler.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=8 _state='suspended' tmpfile=<_io.TextIOWrapper name='<tempfile._TemporaryFileWrapper object at 0x000001BD26AC2B80>' mode='r+' encoding='utf-8'>> err=<FDCapture 2 oldfd=10 _state='suspended' tmpfile=<_io.TextIOWrapper name='<tempfile._TemporaryFileWrapper object at 0x000001BD26AC2BE0>' mode='r+' encoding='utf-8'>> in_=<FDCapture 0 oldfd=6 _state='started' tmpfile=<_io.TextIOWrapper name='nul' mode='r' encoding='cp1252'>> _state='suspended' _in_suspended=False> _capture_fixture=None>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session DevOps-Course-Starter exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x000001BD26AB0B20>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x000001BD26AB0910>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.faulthandler.FaultHandlerHooks object at 0x000001BD26AB0C70>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x000001BD26A82D60>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x000001BD26B27130>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.fixtures.FixtureManager object at 0x000001BD26AB0DC0>
          manager: <_pytest.config.PytestPluginManager object at 0x000001BD23D2A4F0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_report_header [hook]
          config: <_pytest.config.Config object at 0x000001BD264F0AC0>
          startdir: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter
      finish pytest_report_header --> [['rootdir: C:\\DevOps Coursework\\Project Exercise\\DevOps-Course-Starter'], ['using: pytest-6.2.2 pylib-1.10.0']] [hook]
    finish pytest_sessionstart --> [] [hook]
    pytest_collection [hook]
        session: <Session DevOps-Course-Starter exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
    perform_collect <Session DevOps-Course-Starter exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0> ['C:\\DevOps Coursework\\Project Exercise\\DevOps-Course-Starter'] [collection]
        pytest_collectstart [hook]
            collector: <Session DevOps-Course-Starter exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Session DevOps-Course-Starter exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        processing argument (local('C:\\DevOps Coursework\\Project Exercise\\DevOps-Course-Starter'), []) [collection]
            pytest_ignore_collect [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\.env
                config: <_pytest.config.Config object at 0x000001BD264F0AC0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\.env
                parent: <Session DevOps-Course-Starter exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            early skip of rewriting module: py._code [assertion]
            early skip of rewriting module: py._code.code [assertion]
            early skip of rewriting module: repr [assertion]
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\.env.template
                config: <_pytest.config.Config object at 0x000001BD264F0AC0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\.env.template
                parent: <Session DevOps-Course-Starter exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\.env.test
                config: <_pytest.config.Config object at 0x000001BD264F0AC0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\.env.test
                parent: <Session DevOps-Course-Starter exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\.gitignore
                config: <_pytest.config.Config object at 0x000001BD264F0AC0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\.gitignore
                parent: <Session DevOps-Course-Starter exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\README.md
                config: <_pytest.config.Config object at 0x000001BD264F0AC0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\README.md
                parent: <Session DevOps-Course-Starter exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\chromedriver.exe
                config: <_pytest.config.Config object at 0x000001BD264F0AC0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\chromedriver.exe
                parent: <Session DevOps-Course-Starter exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\geckodriver.exe
                config: <_pytest.config.Config object at 0x000001BD264F0AC0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\geckodriver.exe
                parent: <Session DevOps-Course-Starter exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\geckodriver.log
                config: <_pytest.config.Config object at 0x000001BD264F0AC0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\geckodriver.log
                parent: <Session DevOps-Course-Starter exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\poetry.lock
                config: <_pytest.config.Config object at 0x000001BD264F0AC0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\poetry.lock
                parent: <Session DevOps-Course-Starter exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\poetry.toml
                config: <_pytest.config.Config object at 0x000001BD264F0AC0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\poetry.toml
                parent: <Session DevOps-Course-Starter exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\pyproject.toml
                config: <_pytest.config.Config object at 0x000001BD264F0AC0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\pyproject.toml
                parent: <Session DevOps-Course-Starter exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\pytestdebug.log
                config: <_pytest.config.Config object at 0x000001BD264F0AC0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\pytestdebug.log
                parent: <Session DevOps-Course-Starter exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\.git
                config: <_pytest.config.Config object at 0x000001BD264F0AC0>
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\.github
                config: <_pytest.config.Config object at 0x000001BD264F0AC0>
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\.pytest_cache
                config: <_pytest.config.Config object at 0x000001BD264F0AC0>
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\.venv
                config: <_pytest.config.Config object at 0x000001BD264F0AC0>
            finish pytest_ignore_collect --> True [hook]
            pytest_ignore_collect [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\.vscode
                config: <_pytest.config.Config object at 0x000001BD264F0AC0>
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app
                config: <_pytest.config.Config object at 0x000001BD264F0AC0>
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\__init__.py
                config: <_pytest.config.Config object at 0x000001BD264F0AC0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\__init__.py
                parent: <Session DevOps-Course-Starter exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              pytest_pycollect_makemodule [hook]
                  path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\__init__.py
                  parent: <Session DevOps-Course-Starter exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              finish pytest_pycollect_makemodule --> <Package todo_app> [hook]
            finish pytest_collect_file --> [<Package todo_app>] [hook]
            pytest_ignore_collect [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\data
                config: <_pytest.config.Config object at 0x000001BD264F0AC0>
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\data\__init__.py
                config: <_pytest.config.Config object at 0x000001BD264F0AC0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\data\__init__.py
                parent: <Session DevOps-Course-Starter exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              pytest_pycollect_makemodule [hook]
                  path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\data\__init__.py
                  parent: <Session DevOps-Course-Starter exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              finish pytest_pycollect_makemodule --> <Package data> [hook]
            finish pytest_collect_file --> [<Package data>] [hook]
            pytest_ignore_collect [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\templates
                config: <_pytest.config.Config object at 0x000001BD264F0AC0>
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\templates\index.html
                config: <_pytest.config.Config object at 0x000001BD264F0AC0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\templates\index.html
                parent: <Session DevOps-Course-Starter exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\templates\layout.html
                config: <_pytest.config.Config object at 0x000001BD264F0AC0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\templates\layout.html
                parent: <Session DevOps-Course-Starter exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\tests
                config: <_pytest.config.Config object at 0x000001BD264F0AC0>
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\tests\__init__.py
                config: <_pytest.config.Config object at 0x000001BD264F0AC0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\tests\__init__.py
                parent: <Session DevOps-Course-Starter exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              pytest_pycollect_makemodule [hook]
                  path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\tests\__init__.py
                  parent: <Session DevOps-Course-Starter exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              finish pytest_pycollect_makemodule --> <Package tests> [hook]
            finish pytest_collect_file --> [<Package tests>] [hook]
            pytest_ignore_collect [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\tests_e2e
                config: <_pytest.config.Config object at 0x000001BD264F0AC0>
            finish pytest_ignore_collect --> None [hook]
            pytest_ignore_collect [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\tests_e2e\__init__.py
                config: <_pytest.config.Config object at 0x000001BD264F0AC0>
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\tests_e2e\__init__.py
                parent: <Session DevOps-Course-Starter exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              pytest_pycollect_makemodule [hook]
                  path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\tests_e2e\__init__.py
                  parent: <Session DevOps-Course-Starter exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
              finish pytest_pycollect_makemodule --> <Package tests_e2e> [hook]
            finish pytest_collect_file --> [<Package tests_e2e>] [hook]
        finish pytest_make_collect_report --> <CollectReport '' lenresult=4 outcome='passed'> [hook]
        pytest_collectreport [hook]
            report: <CollectReport '' lenresult=4 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
    genitems <Package todo_app> [collection]
      pytest_collectstart [hook]
          collector: <Package todo_app>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package todo_app>
        pytest_ignore_collect [hook]
            path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\.gitignore
            config: <_pytest.config.Config object at 0x000001BD264F0AC0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\.gitignore
            parent: <Package todo_app>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\app.py
            config: <_pytest.config.Config object at 0x000001BD264F0AC0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\app.py
            parent: <Package todo_app>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\flask_config.py
            config: <_pytest.config.Config object at 0x000001BD264F0AC0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\flask_config.py
            parent: <Package todo_app>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\data
            config: <_pytest.config.Config object at 0x000001BD264F0AC0>
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\data\__init__.py
            config: <_pytest.config.Config object at 0x000001BD264F0AC0>
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\templates
            config: <_pytest.config.Config object at 0x000001BD264F0AC0>
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\templates\index.html
            config: <_pytest.config.Config object at 0x000001BD264F0AC0>
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\templates\layout.html
            config: <_pytest.config.Config object at 0x000001BD264F0AC0>
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\tests
            config: <_pytest.config.Config object at 0x000001BD264F0AC0>
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\tests\__init__.py
            config: <_pytest.config.Config object at 0x000001BD264F0AC0>
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\tests_e2e
            config: <_pytest.config.Config object at 0x000001BD264F0AC0>
        finish pytest_ignore_collect --> None [hook]
        pytest_ignore_collect [hook]
            path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\tests_e2e\__init__.py
            config: <_pytest.config.Config object at 0x000001BD264F0AC0>
        finish pytest_ignore_collect --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'todo_app/__init__.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'todo_app/__init__.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package data> [collection]
      pytest_collectstart [hook]
          collector: <Package data>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package data>
        pytest_ignore_collect [hook]
            path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\data\.gitignore
            config: <_pytest.config.Config object at 0x000001BD264F0AC0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\data\.gitignore
            parent: <Package data>
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\data\trello_api.py
            config: <_pytest.config.Config object at 0x000001BD264F0AC0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\data\trello_api.py
            parent: <Package data>
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'todo_app/data/__init__.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'todo_app/data/__init__.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package tests> [collection]
      pytest_collectstart [hook]
          collector: <Package tests>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package tests>
        pytest_ignore_collect [hook]
            path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\tests\test_app.py
            config: <_pytest.config.Config object at 0x000001BD264F0AC0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\tests\test_app.py
            parent: <Package tests>
          pytest_pycollect_makemodule [hook]
              path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\tests\test_app.py
              parent: <Package tests>
          finish pytest_pycollect_makemodule --> <Module test_app.py> [hook]
        finish pytest_collect_file --> [<Module test_app.py>] [hook]
        pytest_ignore_collect [hook]
            path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\tests\test_trello.py
            config: <_pytest.config.Config object at 0x000001BD264F0AC0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\tests\test_trello.py
            parent: <Package tests>
          pytest_pycollect_makemodule [hook]
              path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\tests\test_trello.py
              parent: <Package tests>
          finish pytest_pycollect_makemodule --> <Module test_trello.py> [hook]
        finish pytest_collect_file --> [<Module test_trello.py>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'todo_app/tests/__init__.py' lenresult=2 outcome='passed'> [hook]
    genitems <Module test_app.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_app.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_app.py>
      early skip of rewriting module: todo_app [assertion]
      early skip of rewriting module: todo_app.tests [assertion]
      find_module called for: todo_app.tests.test_app [assertion]
      matched test file 'C:\\DevOps Coursework\\Project Exercise\\DevOps-Course-Starter\\todo_app\\tests\\test_app.py' [assertion]
      found cached rewritten pyc for C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\tests\test_app.py [assertion]
      early skip of rewriting module: todo_app.app [assertion]
      early skip of rewriting module: flask [assertion]
      early skip of rewriting module: jinja2 [assertion]
      early skip of rewriting module: markupsafe [assertion]
      early skip of rewriting module: markupsafe._compat [assertion]
      early skip of rewriting module: markupsafe._speedups [assertion]
      early skip of rewriting module: markupsafe._native [assertion]
      early skip of rewriting module: jinja2.bccache [assertion]
      early skip of rewriting module: hashlib [assertion]
      early skip of rewriting module: _hashlib [assertion]
      early skip of rewriting module: _blake2 [assertion]
      early skip of rewriting module: jinja2._compat [assertion]
      early skip of rewriting module: pickle [assertion]
      early skip of rewriting module: _compat_pickle [assertion]
      early skip of rewriting module: _pickle [assertion]
      early skip of rewriting module: org [assertion]
      early skip of rewriting module: jinja2.utils [assertion]
      early skip of rewriting module: jinja2.environment [assertion]
      early skip of rewriting module: jinja2.nodes [assertion]
      early skip of rewriting module: jinja2.compiler [assertion]
      early skip of rewriting module: jinja2.exceptions [assertion]
      early skip of rewriting module: jinja2.idtracking [assertion]
      early skip of rewriting module: jinja2.visitor [assertion]
      early skip of rewriting module: jinja2.optimizer [assertion]
      early skip of rewriting module: jinja2.defaults [assertion]
      early skip of rewriting module: jinja2.filters [assertion]
      early skip of rewriting module: jinja2.runtime [assertion]
      early skip of rewriting module: jinja2.tests [assertion]
      early skip of rewriting module: jinja2.lexer [assertion]
      early skip of rewriting module: jinja2._identifier [assertion]
      early skip of rewriting module: jinja2.parser [assertion]
      early skip of rewriting module: jinja2.loaders [assertion]
      early skip of rewriting module: werkzeug [assertion]
      early skip of rewriting module: werkzeug.serving [assertion]
      early skip of rewriting module: socket [assertion]
      early skip of rewriting module: _socket [assertion]
      early skip of rewriting module: selectors [assertion]
      early skip of rewriting module: select [assertion]
      early skip of rewriting module: werkzeug._compat [assertion]
      early skip of rewriting module: werkzeug._internal [assertion]
      early skip of rewriting module: werkzeug.exceptions [assertion]
      early skip of rewriting module: werkzeug.utils [assertion]
      early skip of rewriting module: html [assertion]
      early skip of rewriting module: html.entities [assertion]
      early skip of rewriting module: werkzeug.urls [assertion]
      early skip of rewriting module: socketserver [assertion]
      early skip of rewriting module: http [assertion]
      early skip of rewriting module: http.server [assertion]
      early skip of rewriting module: email.utils [assertion]
      early skip of rewriting module: email._parseaddr [assertion]
      early skip of rewriting module: calendar [assertion]
      early skip of rewriting module: email.charset [assertion]
      early skip of rewriting module: email.base64mime [assertion]
      early skip of rewriting module: base64 [assertion]
      early skip of rewriting module: email.quoprimime [assertion]
      early skip of rewriting module: email.errors [assertion]
      early skip of rewriting module: email.encoders [assertion]
      early skip of rewriting module: quopri [assertion]
      early skip of rewriting module: http.client [assertion]
      early skip of rewriting module: email.parser [assertion]
      early skip of rewriting module: email.feedparser [assertion]
      early skip of rewriting module: email._policybase [assertion]
      early skip of rewriting module: email.header [assertion]
      early skip of rewriting module: email.message [assertion]
      early skip of rewriting module: uu [assertion]
      early skip of rewriting module: email._encoded_words [assertion]
      early skip of rewriting module: email.iterators [assertion]
      early skip of rewriting module: ssl [assertion]
      early skip of rewriting module: _ssl [assertion]
      early skip of rewriting module: mimetypes [assertion]
      early skip of rewriting module: click [assertion]
      early skip of rewriting module: click.core [assertion]
      early skip of rewriting module: click._compat [assertion]
      early skip of rewriting module: click._winconsole [assertion]
      early skip of rewriting module: click._unicodefun [assertion]
      early skip of rewriting module: click.exceptions [assertion]
      early skip of rewriting module: click.utils [assertion]
      early skip of rewriting module: click.globals [assertion]
      early skip of rewriting module: click.formatting [assertion]
      early skip of rewriting module: click.parser [assertion]
      early skip of rewriting module: click.termui [assertion]
      early skip of rewriting module: click.types [assertion]
      early skip of rewriting module: click.decorators [assertion]
      early skip of rewriting module: werkzeug.test [assertion]
      early skip of rewriting module: werkzeug.datastructures [assertion]
      early skip of rewriting module: werkzeug.filesystem [assertion]
      early skip of rewriting module: werkzeug.http [assertion]
      early skip of rewriting module: urllib.request [assertion]
      early skip of rewriting module: urllib.error [assertion]
      early skip of rewriting module: urllib.response [assertion]
      early skip of rewriting module: nturl2path [assertion]
      early skip of rewriting module: werkzeug.wrappers [assertion]
      early skip of rewriting module: werkzeug.wrappers.accept [assertion]
      early skip of rewriting module: werkzeug.wrappers.auth [assertion]
      early skip of rewriting module: werkzeug.wrappers.base_request [assertion]
      early skip of rewriting module: werkzeug.formparser [assertion]
      early skip of rewriting module: werkzeug.wsgi [assertion]
      early skip of rewriting module: werkzeug.wrappers.base_response [assertion]
      early skip of rewriting module: werkzeug.wrappers.common_descriptors [assertion]
      early skip of rewriting module: werkzeug.wrappers.etag [assertion]
      early skip of rewriting module: werkzeug.wrappers.request [assertion]
      early skip of rewriting module: werkzeug.wrappers.cors [assertion]
      early skip of rewriting module: werkzeug.wrappers.user_agent [assertion]
      early skip of rewriting module: werkzeug.useragents [assertion]
      early skip of rewriting module: werkzeug.wrappers.response [assertion]
      early skip of rewriting module: http.cookiejar [assertion]
      early skip of rewriting module: flask.json [assertion]
      early skip of rewriting module: itsdangerous [assertion]
      early skip of rewriting module: itsdangerous._json [assertion]
      early skip of rewriting module: simplejson [assertion]
      early skip of rewriting module: itsdangerous.encoding [assertion]
      early skip of rewriting module: itsdangerous._compat [assertion]
      early skip of rewriting module: hmac [assertion]
      early skip of rewriting module: itsdangerous.exc [assertion]
      early skip of rewriting module: itsdangerous.jws [assertion]
      early skip of rewriting module: itsdangerous.serializer [assertion]
      early skip of rewriting module: itsdangerous.signer [assertion]
      early skip of rewriting module: itsdangerous.timed [assertion]
      early skip of rewriting module: itsdangerous.url_safe [assertion]
      early skip of rewriting module: flask._compat [assertion]
      early skip of rewriting module: flask.globals [assertion]
      early skip of rewriting module: werkzeug.local [assertion]
      early skip of rewriting module: greenlet [assertion]
      early skip of rewriting module: thread [assertion]
      early skip of rewriting module: dataclasses [assertion]
      early skip of rewriting module: flask.app [assertion]
      early skip of rewriting module: werkzeug.routing [assertion]
      early skip of rewriting module: difflib [assertion]
      early skip of rewriting module: flask.cli [assertion]
      early skip of rewriting module: flask.helpers [assertion]
      early skip of rewriting module: flask.signals [assertion]
      early skip of rewriting module: blinker [assertion]
      early skip of rewriting module: dotenv [assertion]
      early skip of rewriting module: dotenv.compat [assertion]
      early skip of rewriting module: dotenv.main [assertion]
      early skip of rewriting module: dotenv.parser [assertion]
      early skip of rewriting module: flask.config [assertion]
      early skip of rewriting module: flask.ctx [assertion]
      early skip of rewriting module: flask.logging [assertion]
      early skip of rewriting module: flask.sessions [assertion]
      early skip of rewriting module: flask.json.tag [assertion]
      early skip of rewriting module: flask.templating [assertion]
      early skip of rewriting module: flask.wrappers [assertion]
      early skip of rewriting module: werkzeug.wrappers.json [assertion]
      early skip of rewriting module: simplejson [assertion]
      early skip of rewriting module: flask.blueprints [assertion]
      early skip of rewriting module: todo_app.data [assertion]
      early skip of rewriting module: todo_app.data.trello_api [assertion]
      early skip of rewriting module: requests [assertion]
      early skip of rewriting module: urllib3 [assertion]
      early skip of rewriting module: urllib3.exceptions [assertion]
      early skip of rewriting module: urllib3.packages [assertion]
      early skip of rewriting module: urllib3.packages.ssl_match_hostname [assertion]
      early skip of rewriting module: urllib3.packages.six [assertion]
      early skip of rewriting module: urllib3.packages.six.moves [assertion]
      early skip of rewriting module: urllib3.packages.six.moves.http_client [assertion]
      early skip of rewriting module: urllib3._version [assertion]
      early skip of rewriting module: urllib3.connectionpool [assertion]
      early skip of rewriting module: urllib3.connection [assertion]
      early skip of rewriting module: urllib3.util [assertion]
      early skip of rewriting module: urllib3.util.connection [assertion]
      early skip of rewriting module: urllib3.contrib [assertion]
      early skip of rewriting module: urllib3.contrib._appengine_environ [assertion]
      early skip of rewriting module: urllib3.util.wait [assertion]
      early skip of rewriting module: urllib3.util.request [assertion]
      early skip of rewriting module: brotli [assertion]
      early skip of rewriting module: urllib3.util.response [assertion]
      early skip of rewriting module: urllib3.util.retry [assertion]
      early skip of rewriting module: urllib3.util.ssl_ [assertion]
      early skip of rewriting module: urllib3.util.url [assertion]
      early skip of rewriting module: urllib3.util.ssltransport [assertion]
      early skip of rewriting module: urllib3.util.timeout [assertion]
      early skip of rewriting module: urllib3.util.proxy [assertion]
      early skip of rewriting module: urllib3._collections [assertion]
      early skip of rewriting module: queue [assertion]
      early skip of rewriting module: _queue [assertion]
      early skip of rewriting module: urllib3.request [assertion]
      early skip of rewriting module: urllib3.filepost [assertion]
      early skip of rewriting module: urllib3.fields [assertion]
      early skip of rewriting module: urllib3.packages.six.moves.urllib [assertion]
      early skip of rewriting module: urllib3.packages.six.moves.urllib.parse [assertion]
      early skip of rewriting module: urllib3.response [assertion]
      early skip of rewriting module: brotli [assertion]
      early skip of rewriting module: urllib3.util.queue [assertion]
      early skip of rewriting module: urllib3.poolmanager [assertion]
      early skip of rewriting module: chardet [assertion]
      early skip of rewriting module: chardet.universaldetector [assertion]
      early skip of rewriting module: chardet.charsetgroupprober [assertion]
      early skip of rewriting module: chardet.enums [assertion]
      early skip of rewriting module: chardet.charsetprober [assertion]
      early skip of rewriting module: chardet.escprober [assertion]
      early skip of rewriting module: chardet.codingstatemachine [assertion]
      early skip of rewriting module: chardet.escsm [assertion]
      early skip of rewriting module: chardet.latin1prober [assertion]
      early skip of rewriting module: chardet.mbcsgroupprober [assertion]
      early skip of rewriting module: chardet.utf8prober [assertion]
      early skip of rewriting module: chardet.mbcssm [assertion]
      early skip of rewriting module: chardet.sjisprober [assertion]
      early skip of rewriting module: chardet.mbcharsetprober [assertion]
      early skip of rewriting module: chardet.chardistribution [assertion]
      early skip of rewriting module: chardet.euctwfreq [assertion]
      early skip of rewriting module: chardet.euckrfreq [assertion]
      early skip of rewriting module: chardet.gb2312freq [assertion]
      early skip of rewriting module: chardet.big5freq [assertion]
      early skip of rewriting module: chardet.jisfreq [assertion]
      early skip of rewriting module: chardet.jpcntx [assertion]
      early skip of rewriting module: chardet.eucjpprober [assertion]
      early skip of rewriting module: chardet.gb2312prober [assertion]
      early skip of rewriting module: chardet.euckrprober [assertion]
      early skip of rewriting module: chardet.cp949prober [assertion]
      early skip of rewriting module: chardet.big5prober [assertion]
      early skip of rewriting module: chardet.euctwprober [assertion]
      early skip of rewriting module: chardet.sbcsgroupprober [assertion]
      early skip of rewriting module: chardet.hebrewprober [assertion]
      early skip of rewriting module: chardet.langbulgarianmodel [assertion]
      early skip of rewriting module: chardet.sbcharsetprober [assertion]
      early skip of rewriting module: chardet.langgreekmodel [assertion]
      early skip of rewriting module: chardet.langhebrewmodel [assertion]
      early skip of rewriting module: chardet.langrussianmodel [assertion]
      early skip of rewriting module: chardet.langthaimodel [assertion]
      early skip of rewriting module: chardet.langturkishmodel [assertion]
      early skip of rewriting module: chardet.version [assertion]
      early skip of rewriting module: requests.exceptions [assertion]
      early skip of rewriting module: requests.__version__ [assertion]
      early skip of rewriting module: requests.utils [assertion]
      early skip of rewriting module: requests.certs [assertion]
      early skip of rewriting module: certifi [assertion]
      early skip of rewriting module: certifi.core [assertion]
      early skip of rewriting module: importlib.resources [assertion]
      early skip of rewriting module: importlib._common [assertion]
      early skip of rewriting module: requests._internal_utils [assertion]
      early skip of rewriting module: requests.compat [assertion]
      early skip of rewriting module: simplejson [assertion]
      early skip of rewriting module: http.cookies [assertion]
      early skip of rewriting module: requests.cookies [assertion]
      early skip of rewriting module: requests.structures [assertion]
      early skip of rewriting module: requests.packages [assertion]
      early skip of rewriting module: idna [assertion]
      early skip of rewriting module: idna.package_data [assertion]
      early skip of rewriting module: idna.core [assertion]
      early skip of rewriting module: idna.idnadata [assertion]
      early skip of rewriting module: idna.intranges [assertion]
      early skip of rewriting module: requests.models [assertion]
      early skip of rewriting module: encodings.idna [assertion]
      early skip of rewriting module: stringprep [assertion]
      early skip of rewriting module: requests.hooks [assertion]
      early skip of rewriting module: requests.auth [assertion]
      early skip of rewriting module: requests.status_codes [assertion]
      early skip of rewriting module: requests.api [assertion]
      early skip of rewriting module: requests.sessions [assertion]
      early skip of rewriting module: requests.adapters [assertion]
      early skip of rewriting module: urllib3.contrib.socks [assertion]
      early skip of rewriting module: socks [assertion]
      early skip of rewriting module: unittest [assertion]
      early skip of rewriting module: unittest.result [assertion]
      early skip of rewriting module: unittest.util [assertion]
      early skip of rewriting module: unittest.case [assertion]
      early skip of rewriting module: unittest.suite [assertion]
      early skip of rewriting module: unittest.loader [assertion]
      early skip of rewriting module: unittest.main [assertion]
      early skip of rewriting module: unittest.runner [assertion]
      early skip of rewriting module: unittest.signals [assertion]
      early skip of rewriting module: unittest.mock [assertion]
      early skip of rewriting module: asyncio [assertion]
      early skip of rewriting module: asyncio.base_events [assertion]
      early skip of rewriting module: concurrent [assertion]
      early skip of rewriting module: concurrent.futures [assertion]
      early skip of rewriting module: concurrent.futures._base [assertion]
      early skip of rewriting module: asyncio.constants [assertion]
      early skip of rewriting module: asyncio.coroutines [assertion]
      early skip of rewriting module: asyncio.base_futures [assertion]
      early skip of rewriting module: asyncio.format_helpers [assertion]
      early skip of rewriting module: asyncio.log [assertion]
      early skip of rewriting module: asyncio.events [assertion]
      early skip of rewriting module: contextvars [assertion]
      early skip of rewriting module: _contextvars [assertion]
      early skip of rewriting module: _asyncio [assertion]
      early skip of rewriting module: asyncio.exceptions [assertion]
      early skip of rewriting module: asyncio.base_tasks [assertion]
      early skip of rewriting module: asyncio.futures [assertion]
      early skip of rewriting module: asyncio.protocols [assertion]
      early skip of rewriting module: asyncio.sslproto [assertion]
      early skip of rewriting module: asyncio.transports [assertion]
      early skip of rewriting module: asyncio.staggered [assertion]
      early skip of rewriting module: asyncio.locks [assertion]
      early skip of rewriting module: asyncio.tasks [assertion]
      early skip of rewriting module: asyncio.trsock [assertion]
      early skip of rewriting module: asyncio.runners [assertion]
      early skip of rewriting module: asyncio.queues [assertion]
      early skip of rewriting module: asyncio.streams [assertion]
      early skip of rewriting module: asyncio.subprocess [assertion]
      early skip of rewriting module: asyncio.threads [assertion]
      early skip of rewriting module: asyncio.windows_events [assertion]
      early skip of rewriting module: _overlapped [assertion]
      early skip of rewriting module: asyncio.base_subprocess [assertion]
      early skip of rewriting module: asyncio.proactor_events [assertion]
      early skip of rewriting module: asyncio.selector_events [assertion]
      early skip of rewriting module: asyncio.windows_utils [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_app.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_app.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\assertion\\rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_app.py>
            name: pytest
            obj: <module 'pytest' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\pytest\\__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_app.py>
            name: os
            obj: <module 'os' from 'C:\\Program Files\\Python39\\lib\\os.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_app.py>
            name: json
            obj: <module 'json' from 'C:\\Program Files\\Python39\\lib\\json\\__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_app.py>
            name: todo_app
            obj: <module 'todo_app' from 'C:\\DevOps Coursework\\Project Exercise\\DevOps-Course-Starter\\todo_app\\__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_app.py>
            name: find_dotenv
            obj: <function find_dotenv at 0x000001BD27107280>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_app.py>
            name: load_dotenv
            obj: <function load_dotenv at 0x000001BD27107310>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_app.py>
            name: patch
            obj: <function patch at 0x000001BD27E3F430>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_app.py>
            name: Mock
            obj: <class 'unittest.mock.Mock'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_app.py>
            name: client
            obj: <function client at 0x000001BD27CF9DC0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_app.py>
            name: trello_board_id
            obj: None
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_app.py>
            name: test_index_page
            obj: <function test_index_page at 0x000001BD27E48F70>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x000001BD27D13640>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_index_page>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_app.py>
            name: mock_trello_request
            obj: <function mock_trello_request at 0x000001BD27E47040>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'todo_app/tests/test_app.py' lenresult=1 outcome='passed'> [hook]
    genitems <Function test_index_page> [collection]
      pytest_itemcollected [hook]
          item: <Function test_index_page>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'todo_app/tests/test_app.py' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_trello.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_trello.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_trello.py>
      find_module called for: todo_app.tests.test_trello [assertion]
      matched test file 'C:\\DevOps Coursework\\Project Exercise\\DevOps-Course-Starter\\todo_app\\tests\\test_trello.py' [assertion]
      found cached rewritten pyc for C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\tests\test_trello.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_trello.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_trello.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\assertion\\rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_trello.py>
            name: datetime
            obj: <module 'datetime' from 'C:\\Program Files\\Python39\\lib\\datetime.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_trello.py>
            name: pytest
            obj: <module 'pytest' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\pytest\\__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_trello.py>
            name: TrelloCard
            obj: <class 'todo_app.data.trello_api.TrelloCard'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_trello.py>
            name: ViewModel
            obj: <class 'todo_app.data.trello_api.ViewModel'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_trello.py>
            name: card_list
            obj: <function card_list at 0x000001BD27E47310>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_trello.py>
            name: trello_list_ids
            obj: <function trello_list_ids at 0x000001BD27E47430>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_trello.py>
            name: TestTrello
            obj: <class 'todo_app.tests.test_trello.TestTrello'>
        finish pytest_pycollect_makeitem --> <Class TestTrello> [hook]
      finish pytest_make_collect_report --> <CollectReport 'todo_app/tests/test_trello.py' lenresult=1 outcome='passed'> [hook]
    genitems <Class TestTrello> [collection]
      pytest_collectstart [hook]
          collector: <Class TestTrello>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Class TestTrello>
      finish pytest_make_collect_report --> <CollectReport 'todo_app/tests/test_trello.py::TestTrello' lenresult=1 outcome='passed'> [hook]
    genitems <Instance ()> [collection]
      pytest_collectstart [hook]
          collector: <Instance ()>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Instance ()>
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: test_get_todo
            obj: <staticmethod object at 0x000001BD27E4E400>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x000001BD27E5D4F0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_get_todo>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: test_get_doing
            obj: <staticmethod object at 0x000001BD27E4E430>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x000001BD27E5D490>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_get_doing>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: test_get_done
            obj: <staticmethod object at 0x000001BD27E4E460>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x000001BD27E5D280>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_get_done>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: test_recent_done_items
            obj: <staticmethod object at 0x000001BD27E4E490>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x000001BD27E5D7C0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_recent_done_items>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Instance ()>
            name: test_older_done_items
            obj: <staticmethod object at 0x000001BD27E4E4C0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x000001BD27E5D9A0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_older_done_items>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'todo_app/tests/test_trello.py::TestTrello' lenresult=5 outcome='passed'> [hook]
    genitems <Function test_get_todo> [collection]
      pytest_itemcollected [hook]
          item: <Function test_get_todo>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_get_doing> [collection]
      pytest_itemcollected [hook]
          item: <Function test_get_doing>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_get_done> [collection]
      pytest_itemcollected [hook]
          item: <Function test_get_done>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_recent_done_items> [collection]
      pytest_itemcollected [hook]
          item: <Function test_recent_done_items>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_older_done_items> [collection]
      pytest_itemcollected [hook]
          item: <Function test_older_done_items>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'todo_app/tests/test_trello.py::TestTrello' lenresult=5 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'todo_app/tests/test_trello.py::TestTrello' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'todo_app/tests/test_trello.py' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'todo_app/tests/__init__.py' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package tests_e2e> [collection]
      pytest_collectstart [hook]
          collector: <Package tests_e2e>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package tests_e2e>
        pytest_ignore_collect [hook]
            path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\tests_e2e\test_e2e.py
            config: <_pytest.config.Config object at 0x000001BD264F0AC0>
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\tests_e2e\test_e2e.py
            parent: <Package tests_e2e>
          pytest_pycollect_makemodule [hook]
              path: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\tests_e2e\test_e2e.py
              parent: <Package tests_e2e>
          finish pytest_pycollect_makemodule --> <Module test_e2e.py> [hook]
        finish pytest_collect_file --> [<Module test_e2e.py>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'todo_app/tests_e2e/__init__.py' lenresult=1 outcome='passed'> [hook]
    genitems <Module test_e2e.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_e2e.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_e2e.py>
      early skip of rewriting module: todo_app.tests_e2e [assertion]
      find_module called for: todo_app.tests_e2e.test_e2e [assertion]
      matched test file 'C:\\DevOps Coursework\\Project Exercise\\DevOps-Course-Starter\\todo_app\\tests_e2e\\test_e2e.py' [assertion]
      found cached rewritten pyc for C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter\todo_app\tests_e2e\test_e2e.py [assertion]
      early skip of rewriting module: selenium [assertion]
      early skip of rewriting module: selenium.webdriver [assertion]
      early skip of rewriting module: selenium.webdriver.firefox [assertion]
      early skip of rewriting module: selenium.webdriver.firefox.webdriver [assertion]
      early skip of rewriting module: selenium.webdriver.common [assertion]
      early skip of rewriting module: selenium.webdriver.common.desired_capabilities [assertion]
      early skip of rewriting module: selenium.webdriver.remote [assertion]
      early skip of rewriting module: selenium.webdriver.remote.webdriver [assertion]
      early skip of rewriting module: selenium.webdriver.remote.command [assertion]
      early skip of rewriting module: selenium.webdriver.remote.webelement [assertion]
      early skip of rewriting module: selenium.common [assertion]
      early skip of rewriting module: selenium.common.exceptions [assertion]
      early skip of rewriting module: selenium.webdriver.common.by [assertion]
      early skip of rewriting module: selenium.webdriver.common.utils [assertion]
      early skip of rewriting module: selenium.webdriver.common.keys [assertion]
      early skip of rewriting module: StringIO [assertion]
      early skip of rewriting module: selenium.webdriver.remote.remote_connection [assertion]
      early skip of rewriting module: selenium.webdriver.remote.errorhandler [assertion]
      early skip of rewriting module: selenium.webdriver.remote.utils [assertion]
      early skip of rewriting module: selenium.webdriver.remote.switch_to [assertion]
      early skip of rewriting module: selenium.webdriver.common.alert [assertion]
      early skip of rewriting module: selenium.webdriver.remote.mobile [assertion]
      early skip of rewriting module: selenium.webdriver.remote.file_detector [assertion]
      early skip of rewriting module: selenium.webdriver.common.html5 [assertion]
      early skip of rewriting module: selenium.webdriver.common.html5.application_cache [assertion]
      early skip of rewriting module: selenium.webdriver.firefox.extension_connection [assertion]
      early skip of rewriting module: selenium.webdriver.firefox.firefox_binary [assertion]
      early skip of rewriting module: selenium.webdriver.firefox.firefox_profile [assertion]
      early skip of rewriting module: cStringIO [assertion]
      early skip of rewriting module: xml.dom [assertion]
      early skip of rewriting module: xml.dom.domreg [assertion]
      early skip of rewriting module: xml.dom.minidom [assertion]
      early skip of rewriting module: xml.dom.minicompat [assertion]
      early skip of rewriting module: xml.dom.xmlbuilder [assertion]
      early skip of rewriting module: xml.dom.NodeFilter [assertion]
      early skip of rewriting module: selenium.webdriver.common.proxy [assertion]
      early skip of rewriting module: selenium.webdriver.firefox.options [assertion]
      early skip of rewriting module: selenium.webdriver.firefox.remote_connection [assertion]
      early skip of rewriting module: selenium.webdriver.firefox.service [assertion]
      early skip of rewriting module: selenium.webdriver.common.service [assertion]
      early skip of rewriting module: selenium.webdriver.firefox.webelement [assertion]
      early skip of rewriting module: selenium.webdriver.chrome [assertion]
      early skip of rewriting module: selenium.webdriver.chrome.webdriver [assertion]
      early skip of rewriting module: selenium.webdriver.chrome.remote_connection [assertion]
      early skip of rewriting module: selenium.webdriver.chrome.service [assertion]
      early skip of rewriting module: selenium.webdriver.chrome.options [assertion]
      early skip of rewriting module: selenium.webdriver.ie [assertion]
      early skip of rewriting module: selenium.webdriver.ie.webdriver [assertion]
      early skip of rewriting module: selenium.webdriver.ie.service [assertion]
      early skip of rewriting module: selenium.webdriver.ie.options [assertion]
      early skip of rewriting module: selenium.webdriver.edge [assertion]
      early skip of rewriting module: selenium.webdriver.edge.webdriver [assertion]
      early skip of rewriting module: selenium.webdriver.edge.service [assertion]
      early skip of rewriting module: selenium.webdriver.opera [assertion]
      early skip of rewriting module: selenium.webdriver.opera.webdriver [assertion]
      early skip of rewriting module: selenium.webdriver.opera.options [assertion]
      early skip of rewriting module: selenium.webdriver.safari [assertion]
      early skip of rewriting module: selenium.webdriver.safari.webdriver [assertion]
      early skip of rewriting module: selenium.webdriver.safari.service [assertion]
      early skip of rewriting module: selenium.webdriver.safari.remote_connection [assertion]
      early skip of rewriting module: selenium.webdriver.blackberry [assertion]
      early skip of rewriting module: selenium.webdriver.blackberry.webdriver [assertion]
      early skip of rewriting module: selenium.webdriver.support [assertion]
      early skip of rewriting module: selenium.webdriver.support.ui [assertion]
      early skip of rewriting module: selenium.webdriver.support.select [assertion]
      early skip of rewriting module: selenium.webdriver.support.wait [assertion]
      early skip of rewriting module: selenium.webdriver.phantomjs [assertion]
      early skip of rewriting module: selenium.webdriver.phantomjs.webdriver [assertion]
      early skip of rewriting module: selenium.webdriver.phantomjs.service [assertion]
      early skip of rewriting module: selenium.webdriver.android [assertion]
      early skip of rewriting module: selenium.webdriver.android.webdriver [assertion]
      early skip of rewriting module: selenium.webdriver.webkitgtk [assertion]
      early skip of rewriting module: selenium.webdriver.webkitgtk.webdriver [assertion]
      early skip of rewriting module: selenium.webdriver.webkitgtk.service [assertion]
      early skip of rewriting module: selenium.webdriver.webkitgtk.options [assertion]
      early skip of rewriting module: selenium.webdriver.common.action_chains [assertion]
      early skip of rewriting module: selenium.webdriver.common.actions [assertion]
      early skip of rewriting module: selenium.webdriver.common.actions.action_builder [assertion]
      early skip of rewriting module: selenium.webdriver.common.actions.interaction [assertion]
      early skip of rewriting module: selenium.webdriver.common.actions.key_actions [assertion]
      early skip of rewriting module: selenium.webdriver.common.actions.key_input [assertion]
      early skip of rewriting module: selenium.webdriver.common.actions.input_device [assertion]
      early skip of rewriting module: selenium.webdriver.common.actions.pointer_actions [assertion]
      early skip of rewriting module: selenium.webdriver.common.actions.mouse_button [assertion]
      early skip of rewriting module: selenium.webdriver.common.actions.pointer_input [assertion]
      early skip of rewriting module: selenium.webdriver.common.touch_actions [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_e2e.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_e2e.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\_pytest\\assertion\\rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_e2e.py>
            name: os
            obj: <module 'os' from 'C:\\Program Files\\Python39\\lib\\os.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_e2e.py>
            name: pytest
            obj: <module 'pytest' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\pytest\\__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_e2e.py>
            name: Thread
            obj: <class 'threading.Thread'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_e2e.py>
            name: create_trello_board
            obj: <function create_trello_board at 0x000001BD27CB6C10>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_e2e.py>
            name: delete_trello_board
            obj: <function delete_trello_board at 0x000001BD27CB6CA0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_e2e.py>
            name: app
            obj: <module 'todo_app.app' from 'C:\\DevOps Coursework\\Project Exercise\\DevOps-Course-Starter\\todo_app\\app.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_e2e.py>
            name: webdriver
            obj: <module 'selenium.webdriver' from 'c:\\devops coursework\\project exercise\\devops-course-starter\\.venv\\lib\\site-packages\\selenium\\webdriver\\__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_e2e.py>
            name: Select
            obj: <class 'selenium.webdriver.support.select.Select'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_e2e.py>
            name: find_dotenv
            obj: <function find_dotenv at 0x000001BD27107280>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_e2e.py>
            name: load_dotenv
            obj: <function load_dotenv at 0x000001BD27107310>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_e2e.py>
            name: app_with_temp_board
            obj: <function app_with_temp_board at 0x000001BD27E47B80>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_e2e.py>
            name: driver
            obj: <function driver at 0x000001BD27F81790>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_e2e.py>
            name: test_task_journey
            obj: <function test_task_journey at 0x000001BD27F81820>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x000001BD27F7B400>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_task_journey>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'todo_app/tests_e2e/test_e2e.py' lenresult=1 outcome='passed'> [hook]
    genitems <Function test_task_journey> [collection]
      pytest_itemcollected [hook]
          item: <Function test_task_journey>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'todo_app/tests_e2e/test_e2e.py' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'todo_app/tests_e2e/__init__.py' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collection_modifyitems [hook]
          session: <Session DevOps-Course-Starter exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          config: <_pytest.config.Config object at 0x000001BD264F0AC0>
          items: [<Function test_index_page>, <Function test_get_todo>, <Function test_get_doing>, <Function test_get_done>, <Function test_recent_done_items>, <Function test_older_done_items>, <Function test_task_journey>]
      finish pytest_collection_modifyitems --> [] [hook]
      pytest_collection_finish [hook]
          session: <Session DevOps-Course-Starter exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        pytest_report_collectionfinish [hook]
            config: <_pytest.config.Config object at 0x000001BD264F0AC0>
            startdir: C:\DevOps Coursework\Project Exercise\DevOps-Course-Starter
            items: [<Function test_index_page>, <Function test_get_todo>, <Function test_get_doing>, <Function test_get_done>, <Function test_recent_done_items>, <Function test_older_done_items>, <Function test_task_journey>]
        finish pytest_report_collectionfinish --> [] [hook]
      finish pytest_collection_finish --> [] [hook]
    finish pytest_collection --> None [hook]
    pytest_runtestloop [hook]
        session: <Session DevOps-Course-Starter exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=7>
      pytest_runtest_protocol [hook]
          item: <Function test_index_page>
          nextitem: <Function test_get_todo>
        pytest_runtest_logstart [hook]
            nodeid: todo_app/tests/test_app.py::test_index_page
            location: ('todo_app\\tests\\test_app.py', 19, 'test_index_page')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_index_page>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='client' scope='function' baseid='todo_app/tests/test_app.py'>
              request: <SubRequest 'client' for <Function test_index_page>>
          early skip of rewriting module: flask.testing [assertion]
          early skip of rewriting module: click.testing [assertion]
          finish pytest_fixture_setup --> <FlaskClient <Flask 'todo_app.app'>> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_index_page>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'todo_app/tests/test_app.py::test_index_page' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'todo_app/tests/test_app.py::test_index_page' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'todo_app/tests/test_app.py::test_index_page' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x000001BD264F0AC0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_index_page>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_index_page>
          early skip of rewriting module: _strptime [assertion]
          early skip of rewriting module: flask.debughelpers [assertion]
          early skip of rewriting module: jinja2.ext [assertion]
          early skip of rewriting module: encodings.unicode_escape [assertion]
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_index_page>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'todo_app/tests/test_app.py::test_index_page' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'todo_app/tests/test_app.py::test_index_page' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'todo_app/tests/test_app.py::test_index_page' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x000001BD264F0AC0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_index_page>
            nextitem: <Function test_get_todo>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='function' baseid='todo_app/tests/test_app.py'>
              request: <SubRequest 'client' for <Function test_index_page>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_index_page>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'todo_app/tests/test_app.py::test_index_page' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'todo_app/tests/test_app.py::test_index_page' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'todo_app/tests/test_app.py::test_index_page' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x000001BD264F0AC0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: todo_app/tests/test_app.py::test_index_page
            location: ('todo_app\\tests\\test_app.py', 19, 'test_index_page')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_get_todo>
          nextitem: <Function test_get_doing>
        pytest_runtest_logstart [hook]
            nodeid: todo_app/tests/test_trello.py::TestTrello::test_get_todo
            location: ('todo_app\\tests\\test_trello.py', 24, 'TestTrello.test_get_todo')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_get_todo>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='card_list' scope='function' baseid='todo_app/tests/test_trello.py'>
              request: <SubRequest 'card_list' for <Function test_get_todo>>
          finish pytest_fixture_setup --> [<todo_app.data.trello_api.TrelloCard object at 0x000001BD27F7B490>, <todo_app.data.trello_api.TrelloCard object at 0x000001BD27F7BA30>, <todo_app.data.trello_api.TrelloCard object at 0x000001BD27F99910>, <todo_app.data.trello_api.TrelloCard object at 0x000001BD27FAF8B0>, <todo_app.data.trello_api.TrelloCard object at 0x000001BD27FAFB20>, <todo_app.data.trello_api.TrelloCard object at 0x000001BD27FAFAC0>, <todo_app.data.trello_api.TrelloCard object at 0x000001BD27FAFA90>, <todo_app.data.trello_api.TrelloCard object at 0x000001BD27FAFA60>] [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='trello_list_ids' scope='function' baseid='todo_app/tests/test_trello.py'>
              request: <SubRequest 'trello_list_ids' for <Function test_get_todo>>
          finish pytest_fixture_setup --> [hook]
              todo: 123
              doing: 133
              done: 143
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_get_todo>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_get_todo' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_get_todo' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_get_todo' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x000001BD264F0AC0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_get_todo>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_get_todo>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_get_todo>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_get_todo' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_get_todo' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_get_todo' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x000001BD264F0AC0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_get_todo>
            nextitem: <Function test_get_doing>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='trello_list_ids' scope='function' baseid='todo_app/tests/test_trello.py'>
              request: <SubRequest 'trello_list_ids' for <Function test_get_todo>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='card_list' scope='function' baseid='todo_app/tests/test_trello.py'>
              request: <SubRequest 'card_list' for <Function test_get_todo>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_get_todo>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_get_todo' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_get_todo' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_get_todo' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x000001BD264F0AC0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: todo_app/tests/test_trello.py::TestTrello::test_get_todo
            location: ('todo_app\\tests\\test_trello.py', 24, 'TestTrello.test_get_todo')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_get_doing>
          nextitem: <Function test_get_done>
        pytest_runtest_logstart [hook]
            nodeid: todo_app/tests/test_trello.py::TestTrello::test_get_doing
            location: ('todo_app\\tests\\test_trello.py', 35, 'TestTrello.test_get_doing')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_get_doing>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='card_list' scope='function' baseid='todo_app/tests/test_trello.py'>
              request: <SubRequest 'card_list' for <Function test_get_doing>>
          finish pytest_fixture_setup --> [<todo_app.data.trello_api.TrelloCard object at 0x000001BD27FAFAC0>, <todo_app.data.trello_api.TrelloCard object at 0x000001BD27FAFA90>, <todo_app.data.trello_api.TrelloCard object at 0x000001BD27FAFA60>, <todo_app.data.trello_api.TrelloCard object at 0x000001BD27FAF880>, <todo_app.data.trello_api.TrelloCard object at 0x000001BD27FAFAF0>, <todo_app.data.trello_api.TrelloCard object at 0x000001BD27FAF850>, <todo_app.data.trello_api.TrelloCard object at 0x000001BD27FAF940>, <todo_app.data.trello_api.TrelloCard object at 0x000001BD27FAF910>] [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='trello_list_ids' scope='function' baseid='todo_app/tests/test_trello.py'>
              request: <SubRequest 'trello_list_ids' for <Function test_get_doing>>
          finish pytest_fixture_setup --> [hook]
              todo: 123
              doing: 133
              done: 143
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_get_doing>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_get_doing' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_get_doing' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_get_doing' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x000001BD264F0AC0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_get_doing>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_get_doing>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_get_doing>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_get_doing' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_get_doing' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_get_doing' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x000001BD264F0AC0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_get_doing>
            nextitem: <Function test_get_done>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='trello_list_ids' scope='function' baseid='todo_app/tests/test_trello.py'>
              request: <SubRequest 'trello_list_ids' for <Function test_get_doing>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='card_list' scope='function' baseid='todo_app/tests/test_trello.py'>
              request: <SubRequest 'card_list' for <Function test_get_doing>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_get_doing>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_get_doing' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_get_doing' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_get_doing' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x000001BD264F0AC0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: todo_app/tests/test_trello.py::TestTrello::test_get_doing
            location: ('todo_app\\tests\\test_trello.py', 35, 'TestTrello.test_get_doing')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_get_done>
          nextitem: <Function test_recent_done_items>
        pytest_runtest_logstart [hook]
            nodeid: todo_app/tests/test_trello.py::TestTrello::test_get_done
            location: ('todo_app\\tests\\test_trello.py', 46, 'TestTrello.test_get_done')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_get_done>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='card_list' scope='function' baseid='todo_app/tests/test_trello.py'>
              request: <SubRequest 'card_list' for <Function test_get_done>>
          finish pytest_fixture_setup --> [<todo_app.data.trello_api.TrelloCard object at 0x000001BD27F7B490>, <todo_app.data.trello_api.TrelloCard object at 0x000001BD27F7B6D0>, <todo_app.data.trello_api.TrelloCard object at 0x000001BD27F7BAC0>, <todo_app.data.trello_api.TrelloCard object at 0x000001BD27F7B790>, <todo_app.data.trello_api.TrelloCard object at 0x000001BD27F7B7F0>, <todo_app.data.trello_api.TrelloCard object at 0x000001BD27F7B6A0>, <todo_app.data.trello_api.TrelloCard object at 0x000001BD27FFFF10>, <todo_app.data.trello_api.TrelloCard object at 0x000001BD27FFFEB0>] [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='trello_list_ids' scope='function' baseid='todo_app/tests/test_trello.py'>
              request: <SubRequest 'trello_list_ids' for <Function test_get_done>>
          finish pytest_fixture_setup --> [hook]
              todo: 123
              doing: 133
              done: 143
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_get_done>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_get_done' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_get_done' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_get_done' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x000001BD264F0AC0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_get_done>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_get_done>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_get_done>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_get_done' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_get_done' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_get_done' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x000001BD264F0AC0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_get_done>
            nextitem: <Function test_recent_done_items>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='trello_list_ids' scope='function' baseid='todo_app/tests/test_trello.py'>
              request: <SubRequest 'trello_list_ids' for <Function test_get_done>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='card_list' scope='function' baseid='todo_app/tests/test_trello.py'>
              request: <SubRequest 'card_list' for <Function test_get_done>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_get_done>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_get_done' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_get_done' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_get_done' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x000001BD264F0AC0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: todo_app/tests/test_trello.py::TestTrello::test_get_done
            location: ('todo_app\\tests\\test_trello.py', 46, 'TestTrello.test_get_done')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_recent_done_items>
          nextitem: <Function test_older_done_items>
        pytest_runtest_logstart [hook]
            nodeid: todo_app/tests/test_trello.py::TestTrello::test_recent_done_items
            location: ('todo_app\\tests\\test_trello.py', 57, 'TestTrello.test_recent_done_items')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_recent_done_items>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='card_list' scope='function' baseid='todo_app/tests/test_trello.py'>
              request: <SubRequest 'card_list' for <Function test_recent_done_items>>
          finish pytest_fixture_setup --> [<todo_app.data.trello_api.TrelloCard object at 0x000001BD27FAF8E0>, <todo_app.data.trello_api.TrelloCard object at 0x000001BD27FAFB20>, <todo_app.data.trello_api.TrelloCard object at 0x000001BD27FFFF10>, <todo_app.data.trello_api.TrelloCard object at 0x000001BD27FFFEB0>, <todo_app.data.trello_api.TrelloCard object at 0x000001BD27FFFE80>, <todo_app.data.trello_api.TrelloCard object at 0x000001BD27FFFF40>, <todo_app.data.trello_api.TrelloCard object at 0x000001BD27FFFDC0>, <todo_app.data.trello_api.TrelloCard object at 0x000001BD27FFFEE0>] [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='trello_list_ids' scope='function' baseid='todo_app/tests/test_trello.py'>
              request: <SubRequest 'trello_list_ids' for <Function test_recent_done_items>>
          finish pytest_fixture_setup --> [hook]
              todo: 123
              doing: 133
              done: 143
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_recent_done_items>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_recent_done_items' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_recent_done_items' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_recent_done_items' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x000001BD264F0AC0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_recent_done_items>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_recent_done_items>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_recent_done_items>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_recent_done_items' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_recent_done_items' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_recent_done_items' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x000001BD264F0AC0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_recent_done_items>
            nextitem: <Function test_older_done_items>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='trello_list_ids' scope='function' baseid='todo_app/tests/test_trello.py'>
              request: <SubRequest 'trello_list_ids' for <Function test_recent_done_items>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='card_list' scope='function' baseid='todo_app/tests/test_trello.py'>
              request: <SubRequest 'card_list' for <Function test_recent_done_items>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_recent_done_items>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_recent_done_items' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_recent_done_items' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_recent_done_items' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x000001BD264F0AC0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: todo_app/tests/test_trello.py::TestTrello::test_recent_done_items
            location: ('todo_app\\tests\\test_trello.py', 57, 'TestTrello.test_recent_done_items')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_older_done_items>
          nextitem: <Function test_task_journey>
        pytest_runtest_logstart [hook]
            nodeid: todo_app/tests/test_trello.py::TestTrello::test_older_done_items
            location: ('todo_app\\tests\\test_trello.py', 66, 'TestTrello.test_older_done_items')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_older_done_items>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='card_list' scope='function' baseid='todo_app/tests/test_trello.py'>
              request: <SubRequest 'card_list' for <Function test_older_done_items>>
          finish pytest_fixture_setup --> [<todo_app.data.trello_api.TrelloCard object at 0x000001BD27FFFE80>, <todo_app.data.trello_api.TrelloCard object at 0x000001BD27FFFF40>, <todo_app.data.trello_api.TrelloCard object at 0x000001BD27FFFDC0>, <todo_app.data.trello_api.TrelloCard object at 0x000001BD27FFFEE0>, <todo_app.data.trello_api.TrelloCard object at 0x000001BD27FFFE20>, <todo_app.data.trello_api.TrelloCard object at 0x000001BD27FFFDF0>, <todo_app.data.trello_api.TrelloCard object at 0x000001BD27FFFF70>, <todo_app.data.trello_api.TrelloCard object at 0x000001BD27FFFD00>] [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='trello_list_ids' scope='function' baseid='todo_app/tests/test_trello.py'>
              request: <SubRequest 'trello_list_ids' for <Function test_older_done_items>>
          finish pytest_fixture_setup --> [hook]
              todo: 123
              doing: 133
              done: 143
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_older_done_items>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_older_done_items' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_older_done_items' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_older_done_items' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x000001BD264F0AC0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_older_done_items>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_older_done_items>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_older_done_items>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_older_done_items' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_older_done_items' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_older_done_items' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x000001BD264F0AC0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_older_done_items>
            nextitem: <Function test_task_journey>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='trello_list_ids' scope='function' baseid='todo_app/tests/test_trello.py'>
              request: <SubRequest 'trello_list_ids' for <Function test_older_done_items>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='card_list' scope='function' baseid='todo_app/tests/test_trello.py'>
              request: <SubRequest 'card_list' for <Function test_older_done_items>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_older_done_items>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_older_done_items' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_older_done_items' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'todo_app/tests/test_trello.py::TestTrello::test_older_done_items' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x000001BD264F0AC0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: todo_app/tests/test_trello.py::TestTrello::test_older_done_items
            location: ('todo_app\\tests\\test_trello.py', 66, 'TestTrello.test_older_done_items')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_task_journey>
          nextitem: None
        pytest_runtest_logstart [hook]
            nodeid: todo_app/tests_e2e/test_e2e.py::test_task_journey
            location: ('todo_app\\tests_e2e\\test_e2e.py', 33, 'test_task_journey')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_task_journey>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='driver' scope='module' baseid='todo_app/tests_e2e/test_e2e.py'>
              request: <SubRequest 'driver' for <Function test_task_journey>>
          finish pytest_fixture_setup --> <selenium.webdriver.chrome.webdriver.WebDriver (session="c72b13ef0f161f000350fa1cd56f0304")> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='app_with_temp_board' scope='module' baseid='todo_app/tests_e2e/test_e2e.py'>
              request: <SubRequest 'app_with_temp_board' for <Function test_task_journey>>
          early skip of rewriting module: netrc [assertion]
        pytest_runtest_makereport [hook]
            item: <Function test_task_journey>
            call: <CallInfo when='setup' excinfo=<ExceptionInfo JSONDecodeError('Expecting value: line 1 column 1 (char 0)') tblen=39>>
        finish pytest_runtest_makereport --> <TestReport 'todo_app/tests_e2e/test_e2e.py::test_task_journey' when='setup' outcome='failed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'todo_app/tests_e2e/test_e2e.py::test_task_journey' when='setup' outcome='failed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'todo_app/tests_e2e/test_e2e.py::test_task_journey' when='setup' outcome='failed'>
              config: <_pytest.config.Config object at 0x000001BD264F0AC0>
          finish pytest_report_teststatus --> ('error', 'E', 'ERROR') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_exception_interact [hook]
            node: <Function test_task_journey>
            call: <CallInfo when='setup' excinfo=<ExceptionInfo JSONDecodeError('Expecting value: line 1 column 1 (char 0)') tblen=6>>
            report: <TestReport 'todo_app/tests_e2e/test_e2e.py::test_task_journey' when='setup' outcome='failed'>
        finish pytest_exception_interact --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_task_journey>
            nextitem: None
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='app_with_temp_board' scope='module' baseid='todo_app/tests_e2e/test_e2e.py'>
              request: <SubRequest 'app_with_temp_board' for <Function test_task_journey>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='driver' scope='module' baseid='todo_app/tests_e2e/test_e2e.py'>
              request: <SubRequest 'driver' for <Function test_task_journey>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_task_journey>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'todo_app/tests_e2e/test_e2e.py::test_task_journey' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'todo_app/tests_e2e/test_e2e.py::test_task_journey' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'todo_app/tests_e2e/test_e2e.py::test_task_journey' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x000001BD264F0AC0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: todo_app/tests_e2e/test_e2e.py::test_task_journey
            location: ('todo_app\\tests_e2e\\test_e2e.py', 33, 'test_task_journey')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
    finish pytest_runtestloop --> True [hook]
    pytest_sessionfinish [hook]
        session: <Session DevOps-Course-Starter exitstatus=<ExitCode.TESTS_FAILED: 1> testsfailed=1 testscollected=7>
        exitstatus: ExitCode.TESTS_FAILED
      pytest_terminal_summary [hook]
          terminalreporter: <_pytest.terminal.TerminalReporter object at 0x000001BD26A82D60>
          exitstatus: ExitCode.TESTS_FAILED
          config: <_pytest.config.Config object at 0x000001BD264F0AC0>
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
        pytest_report_teststatus [hook]
            report: <TestReport 'todo_app/tests_e2e/test_e2e.py::test_task_journey' when='setup' outcome='failed'>
            config: <_pytest.config.Config object at 0x000001BD264F0AC0>
        finish pytest_report_teststatus --> ('error', 'E', 'ERROR') [hook]
      finish pytest_terminal_summary --> [] [hook]
    finish pytest_sessionfinish --> [] [hook]
    pytest_unconfigure [hook]
        config: <_pytest.config.Config object at 0x000001BD264F0AC0>
    finish pytest_unconfigure --> [] [hook]
